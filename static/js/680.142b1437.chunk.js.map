{"version":3,"file":"static/js/680.142b1437.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","pages/ContactPages/components/ContactForm.jsx","pages/ContactPages/components/ContactList.jsx","pages/ContactPages/components/Filter.jsx","ColorModeSwitcher.js","pages/ContactPages/ContactPage.jsx","pages/HomePage/HomePage.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["export const selectAllContacts = state => state.contacts.items;\n","import { addContact } from '../../../redux/contacts/contactsApi';\nimport { Formik, Form, Field } from 'formik';\nimport swal from 'sweetalert';\n\nimport { selectAllContacts } from '../../../redux/contacts/contactsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Button, Flex, FormLabel, Input, Text } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectAllContacts);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitForm = (values, { setSubmitting, resetForm }) => {\n    setSubmitting(true);\n    !values.name || !values.number\n      ? swal('Please enter name and number')\n      : allContacts?.some(\n          item => item.name.toLowerCase() === values.name.toLowerCase()\n        )\n      ? swal('This contact is already in contacts')\n      : dispatch(addContact(values));\n    resetForm();\n    setSubmitting(false);\n  };\n\n  const fieldsData = [\n    { name: 'name', label: 'Name', type: 'name' },\n    {\n      name: 'number',\n      label: 'Number',\n      type: 'tel',\n    },\n  ];\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box p={6} rounded=\"md\">\n        <Text\n          fontSize=\"25px\"\n          fontWeight=\"extrabold\"\n          textAlign={['center']}\n          mb=\"20px\"\n        >\n          Phonebook\n        </Text>\n        <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\n          {({ values, handleChange, handleBlur }) => (\n            <Form>\n              {fieldsData.map(({ name, label, type }) => (\n                <div key={name}>\n                  <FormLabel\n                    fontWeight=\"300\"\n                    fontSize=\"15px\"\n                    mb=\"0px\"\n                    mt=\"15px\"\n                  >\n                    {label}\n                  </FormLabel>\n                  <Field\n                    as={Input}\n                    variant=\"filled\"\n                    name={name}\n                    type={type}\n                    id={name}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    placeholder={label}\n                    value={values[name] || ''}\n                  />\n                </div>\n              ))}\n              <Button type=\"submit\" colorScheme=\"purple\" width=\"full\" mt=\"30px\">\n                Add contact\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Box, Button, Flex } from '@chakra-ui/react';\nimport { SmallCloseIcon } from '@chakra-ui/icons';\nimport { getUserName } from '../../../redux/auth/auth-selectors';\nimport { deleteContact } from '../../../redux/contacts/contactsApi';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  TableContainer,\n} from '@chakra-ui/react';\n\nconst ContactList = ({ getFilteredContacts }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  const name = useSelector(getUserName);\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box p={6}>\n        <TableContainer>\n          <Table variant=\"striped\" colorScheme=\"purple\" size=\"sm\">\n            <TableCaption>\n              Personal phonebook&nbsp;\n              {name}\n            </TableCaption>\n            <Thead>\n              <Tr>\n                <Th>Name</Th>\n                <Th>Number</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {getFilteredContacts?.map(({ id, name, number }) => (\n                <Tr key={id}>\n                  <Td>{name}</Td>\n                  <Td>{number}</Td>\n                  <Td isNumeric>\n                    <Button\n                      h=\"20px\"\n                      type=\"button\"\n                      bg=\"transparent\"\n                      onClick={() => handleDelete(id)}\n                    >\n                      <SmallCloseIcon />\n                    </Button>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default ContactList;\n","import { Box, Flex, Text } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\n\nconst Filter = ({ onChangeFilter, value }) => {\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box p={6} rounded=\"md\">\n        <Text fontSize=\"20px\" fontWeight=\"extrabold\" textAlign={['center']}>\n          Contacts\n        </Text>\n        <form>\n          <Text htmlFor=\"text\" textAlign={['center']}>\n            Find contacts by name\n          </Text>\n          <Input\n            id=\"text\"\n            name=\"text\"\n            type=\"text\"\n            onChange={onChangeFilter}\n            value={value}\n          />\n        </form>\n      </Box>\n    </Flex>\n  );\n};\nexport default Filter;\n","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsApi';\nimport Filter from './components/Filter';\nimport { selectAllContacts } from '../../redux/contacts/contactsSelectors';\nimport { ChakraProvider, Box, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from '../../ColorModeSwitcher';\n\nconst ContactPage = () => {\n  const [filtered, setFiltered] = useState('');\n  const contacts = useSelector(selectAllContacts);\n  const onChangeFilter = e => {\n    setFiltered(e.target.value);\n  };\n\n  const getFilteredContacts = () => {\n    const filterNormalized = filtered.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalized)\n    );\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box maxW=\"960px\" mx=\"auto\">\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n        <ContactForm />\n        <Filter onChangeFilter={onChangeFilter} value={filtered} />\n        <ContactList getFilteredContacts={getFilteredContacts()} />\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport default ContactPage;\n","import { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport ContactPage from '../ContactPages/ContactPage';\nimport LoginPage from 'pages/LoginPage/LoginPage';\n\nconst HomePage = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return <>{isLoggedIn ? <ContactPage /> : <LoginPage />}</>;\n};\n\nexport default HomePage;\n","import { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nimport swal from 'sweetalert';\n\nimport {\n  Box,\n  Button,\n  Flex,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\n\nimport { logIn } from '../../redux/auth/auth-operations';\n\nconst LoginPage = () => {\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(!show);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitForm = (values, { setSubmitting, resetForm }) => {\n    setSubmitting(true);\n    values.email.length <= 0 || values.password.length <= 0\n      ? swal('Please enter email and password')\n      : dispatch(logIn(values));\n    resetForm();\n    setSubmitting(false);\n  };\n\n  const fieldsData = [{ name: 'email', label: 'Email', type: 'email' }];\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box p={6} rounded=\"md\">\n        <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\n          {({ values, handleChange, handleBlur }) => (\n            <Form>\n              {fieldsData.map(({ name, label, type }) => (\n                <div key={name}>\n                  <FormLabel\n                    fontWeight=\"300\"\n                    fontSize=\"15px\"\n                    mb=\"0px\"\n                    mt=\"15px\"\n                    htmlFor=\"\"\n                  >\n                    {label}\n                  </FormLabel>\n                  <Field\n                    as={Input}\n                    variant=\"filled\"\n                    name={name}\n                    type={type}\n                    id={name}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    placeholder={label}\n                    value={values[name] || ''}\n                  />\n                </div>\n              ))}\n              <FormLabel\n                fontWeight=\"300\"\n                fontSize=\"15px\"\n                mb=\"0px\"\n                mt=\"15px\"\n                htmlFor=\"\"\n              >\n                Password\n              </FormLabel>\n              <InputGroup>\n                <Field\n                  as={Input}\n                  variant=\"filled\"\n                  name=\"password\"\n                  type={show ? 'text' : 'password'}\n                  id=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  placeholder=\"Password\"\n                  value={values.password || ''}\n                />\n                <InputRightElement width=\"4.5rem\">\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleShow}>\n                    {show ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n              <Button type=\"submit\" colorScheme=\"purple\" width=\"full\" mt=\"30px\">\n                Submit\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default LoginPage;\n"],"names":["selectAllContacts","state","contacts","items","dispatch","useDispatch","allContacts","useSelector","fieldsData","name","label","type","align","justify","p","rounded","fontSize","fontWeight","textAlign","mb","initialValues","email","password","onSubmit","values","setSubmitting","resetForm","number","some","item","toLowerCase","swal","addContact","handleChange","handleBlur","map","mt","as","Input","variant","id","onBlur","onChange","placeholder","value","colorScheme","width","getFilteredContacts","getUserName","size","Tr","Th","Td","isNumeric","h","bg","onClick","deleteContact","handleDelete","onChangeFilter","htmlFor","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","color","marginLeft","icon","useState","filtered","setFiltered","useEffect","getContacts","theme","maxW","mx","justifySelf","e","target","filterNormalized","filter","contact","includes","isLoggedIn","getIsLoggedIn","show","setShow","handleShow","length","logIn"],"sourceRoot":""}